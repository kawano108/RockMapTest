rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function isUserAuthenticated(userId) {
        return isAuthenticated() && userId == request.auth.uid;
    }
    
    // for read subCollections
    match/{path=**}/rocks/{rock} {
    	allow read: if true;
    }
    
    match/{path=**}/courses/{course} {
    	allow read: if true;
    }
    
    match/{path=**}/climbed/{climbed} {
    	allow read: if true;
    }

    match/users/{userId} {
      allow read:   if true;
      allow create: if isUserAuthenticated(userId)
      allow update: if isUserAuthenticated(userId)
      allow delete: if false;

      match/rocks/{rockId} {
        allow read:   if true;
        allow create: if isUserAuthenticated(userId)
        allow update: if isUserAuthenticated(userId)
        allow delete: if isUserAuthenticated(userId)
      }

      match/courses/{courseId} {
        allow read:   if true;
        allow create: if isUserAuthenticated(userId)
        allow update: if isUserAuthenticated(userId)
        allow delete: if isUserAuthenticated(userId)

        match/totalClimbedNumber/{id} {
          allow read:   if true;
          allow create: if isUserAuthenticated(userId)
          allow update: if isUserAuthenticated(userId)
          allow delete: if false
        }
      }

      match/climbed/{climbedId} {
        allow read:   if true
        allow create: if isUserAuthenticated(userId)
        allow update: if isUserAuthenticated(userId)
        allow delete: if isUserAuthenticated(userId)
      }
    }
  }
}